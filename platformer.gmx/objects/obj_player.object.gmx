<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_tall</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.5; hsp = 0; vsp = 0; jumpSpeed = 10; moveSpeed = 5; damage = 0; actionone = scr_heavy_strike; actiontwo = 0; actionthree = 0; actionfour = 0;
x = 4;
y = room_height/2;
scr_generate();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if damage &gt; 0 {
global.hp -= damage;
damage = 0;
}

if global.hp &lt; global.maxhp {
global.hp += global.con/10;
}

if global.hp &lt; 0 game_restart();

if place_meeting(x,y-1,obj_wall) mask_index = spr_short;

kLeft = -keyboard_check(ord('A')); kRight = keyboard_check(ord('D')); kJump = keyboard_check(ord('W')); kDown = -keyboard_check(ord('S')); kDownR = keyboard_check_released(ord('S')); kActionone = mouse_check_button_pressed(mb_left);

kActiontwo = mouse_check_button_pressed(mb_right); kActionthree = keyboard_check_direct(vk_lshift); kActionfour = keyboard_check(vk_space);

if (place_meeting(x, y + 1, obj_wall))||(place_meeting(xprevious+(kLeft+kRight), y, obj_wall)){ vsp = (kDown + kJump) * -jumpSpeed * ( 1 + ( 0.5 * kDownR ) ) } else if kDown == -1 { vsp = kDown * -jumpSpeed }

move = kLeft + kRight; hsp = move * ( moveSpeed + kDown * 3 ); if (vsp &lt; 10) { vsp += grav; };

if (place_meeting(x + hsp, y, obj_wall)) { while (!place_meeting(x + sign(hsp), y, obj_wall)) { x += sign(hsp); } hsp = 0; } x += hsp;

if (place_meeting(x, y + vsp, obj_wall)) { while (!place_meeting(x, y + sign(vsp), obj_wall)) { y += sign(vsp); } vsp = 0; } y += vsp;

if kRight image_xscale = 1 else if kLeft == -1 image_xscale = -1;

walkspeed = kLeft + kRight;

if walkspeed||walkspeed == -1 sprite_index = spr_walk else sprite_index = spr_idle;

if kDown == -1 {mask_index = spr_short} else if !place_meeting(x,y-1,obj_wall) mask_index = spr_tall;

view_xview[0] = x-160;
view_yview[0] = y-160;

if mask_index == spr_short image_yscale = 0.5; else image_yscale = 1;

if kAction {
script_execute(actionone);
}

if kActiontwo {
script_execute(actiontwo);
}

if kActionthree {
script_execute(actionthree);
}

if kActionfour {
script_execute(actionfour);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar hp;
globalvar mp;
globalvar maxhp;
globalvar maxmp;
global.maxhp = global.con*20;
if global.castingstat = "int" {global.maxmp = global.int*20; } else if global.castingstat = "dex" {global.maxmp = global.dex*20;} else if global.castingstat = "wis" {global.maxmp = global.wis*20;}
global.mp = global.maxmp;
global.hp = global.maxhp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(0,0,view_hview[0],24,hp/maxhp*100,c_black,c_red,c_green,1,true,true);
draw_healthbar(0,24,view_hview[0],48,mp/maxmp*100,c_black,c_blue,c_blue,1,true,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
