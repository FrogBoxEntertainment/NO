<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.class = "depraved"
global.castingstat = "int";
globalvar int;
globalvar str;
globalvar dex;
globalvar con;
globalvar cha;
globalvar wis;
global.int = 1;
global.str = 1;
global.dex = 1;
global.con = 1;
global.cha = 1;
global.wis = 1;
global.items = ds_grid_create(7,7);
for (i = 0; i &lt; 7; i++) {
for (ii = 0; ii &lt; 7; ii++) {
ds_grid_add(global.items,i,ii,self)
}
}
//fighter
button[0,0] = room_width/2 - 24;
button[0,1] = room_height/3 - 12;
button[1,0] = room_width/2 + 24;
button[1,1] = room_height/3 + 12;
//mage
button[2,0] = room_width/2 - 24;
button[2,1] = room_height/2 - 12;
button[3,0] = room_width/2 + 24;
button[3,1] = room_height/2 + 12;
//gish
button[4,0] = room_width/2 - 24;
button[4,1] = room_height/6 - 12;
button[5,0] = room_width/2 + 24;
button[5,1] = room_height/6 + 12;
//start
button[6,0] = room_width/2 - 24;
button[6,1] = room_height - 48 - 12;
button[7,0] = room_width/2 + 24;
button[7,1] = room_height - 48 + 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scr_box(button[0,0],button[0,1],button[1,0],button[1,1]) {
global.class = "Fighter"
global.int = 1;
global.str = 5;
global.dex = 5;
global.con = 5;
global.cha = 1;
global.wis = 1;
global.castingstat = "dex"
}
if scr_box(button[2,0],button[2,1],button[3,0],button[3,1]) {
global.class = "Mage"
global.int = 5;
global.str = 1;
global.dex = 1;
global.con = 1;
global.cha = 5;
global.wis = 5;
global.castingstat = "wis"
}
if scr_box(button[4,0],button[4,1],button[5,0],button[5,1]) {
global.class = "Gish"
global.int = 5;
global.str = 1;
global.dex = 5;
global.con = 5;
global.cha = 1;
global.wis = 1;
global.castingstat = "int"
}
if scr_box(button[6,0],button[6,1],button[7,0],button[7,1]) {
room_goto(rom_level_one);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(0,26,room_width,50,global.int*20,c_white,c_red,c_green,0,false,true);
draw_text(0,26,"int");
draw_healthbar(0,51,room_width,74,global.str*20,c_white,c_red,c_green,0,false,true);
draw_text(0,51,"str");
draw_healthbar(0,75,room_width,99,global.dex*20,c_white,c_red,c_green,0,false,true);
draw_text(0,75,"dex");
draw_healthbar(0,100,room_width,124,global.con*20,c_white,c_red,c_green,0,false,true);
draw_text(0,100,"con");
draw_healthbar(0,125,room_width,149,global.cha*20,c_white,c_red,c_green,0,false,true);
draw_text(0,125,"cha");
draw_healthbar(0,150,room_width,174,global.wis*20,c_white,c_red,c_green,0,false,true);
draw_text(0,150,"wis");
draw_set_colour(c_black);
draw_rectangle(button[0,0],button[0,1],button[1,0],button[1,1],true)
draw_rectangle(button[2,0],button[2,1],button[3,0],button[3,1],true)
draw_rectangle(button[4,0],button[4,1],button[5,0],button[5,1],true)
draw_rectangle(button[6,0],button[6,1],button[7,0],button[7,1],true)
draw_text(room_width/2,room_height/2,"Mage");
draw_text(room_width/2,room_height/3,"Fighter");
draw_text(room_width/2,room_height/6,"Gish");
draw_text(room_width/2,room_height-48,"Start");
draw_rectangle(1,1,49,25,true);
draw_text(2,2,global.class);
draw_set_colour(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
